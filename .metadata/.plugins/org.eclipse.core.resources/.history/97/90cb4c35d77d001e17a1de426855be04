package com.ruby.java.ch13.multiGen;



class Bag <T, N>{
	private T thing;
	private N name;
	
	public Bag(T thing, N name) {
		this.thing = thing;
		this.name = name;
	}

	public T getThing() {
		return thing;
	}

	public void setThing(T thing) {
		this.thing = thing;
	}
	
	
	public N getName() {
		return name;
	}

	public void getName(N thing) {
		this.name = name;
	}
	

	void showType() {
		System.out.println("T의 타입은 " + thing.getClass().getName());
		System.out.println("N의 타입은 " + name.getClass().getName());
	}
}

class Book {
	public String toString() {
		return "책";
	}
}
class PencilCase {}
class Notebook {}

public class BagTest {

	public static void main(String[] args) {
		
		Bag<Book, String> bag = new Bag<Book, String>(new Book(), "과학")

		Book book = (Book) bag.getThing();  // (Book)은 type casting
		PencilCase pc = (PencilCase) bag2.getThing();
		Notebook nb = (Notebook) bag3.getThing();

		bag = bag2; // 여기가 공부하는 포인트. 앞에는 에러떳는데 여긴 안남. 이유는 모두가 타입이 Bag로 같기때문.
		// 제네릭은 엄격한 타입 검사를 통해 안정성을 높여준다.
	}
}